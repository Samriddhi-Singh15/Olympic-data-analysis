# -*- coding: utf-8 -*-
"""project 2

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IQNrs8i0TtOkR8BCw119VNFwTQJCTM8T
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.figure_factory as ff
import plotly.express as px

df=pd.read_csv('/content/athlete_events.csv')
region=pd.read_csv('/content/noc_regions.csv')

#only need summer data
df=df[df['Season']=='Summer']

df.shape

df.head()

region.head()

df=df.merge(region,on='NOC',how='left')
df

df['region'].unique().shape

df.isnull().sum()

df.duplicated().sum()

df.drop_duplicates(inplace=True)

df.duplicated().sum()

df['Medal'].value_counts()

df['Medal'].unique()

medals=pd.get_dummies(df['Medal'],dtype=int)

df=pd.concat([df,medals],axis=1)
df.columns

#galat info diya h
df.groupby('NOC').sum()[['Gold','Silver','Bronze']].sort_values('Gold',ascending=False)

df.columns

medal_tally=df.drop_duplicates(subset=['Team', 'NOC', 'Games','Year', 'Season', 'City', 'Sport', 'Event', 'Medal'])
medal_tally.columns

medal_tally=medal_tally.groupby('NOC').sum()[['Gold','Silver','Bronze']].sort_values('Gold',ascending=False).reset_index()

medal_tally[medal_tally['NOC']=='IND']

df['Year'].sort_values().unique()

Years=df['Year'].unique().tolist()

Years.sort()
Years

country=np.unique(df['region'].dropna().values.tolist())

country.sort()

country

#filter medal winners
medal_df=df[df['Medal'].notnull()]
#counting medals by countries
top_countries=medal_df['region'].value_counts().head(5)
#visulize
top_countries.plot(kind='bar',title='Top 5 Countries Of Medal Winner',color='#D3AF37')

#Drop Duplicates so same name doesnt pop up
athetes_over_Year=df.drop_duplicates(subset=['Name','region','Year'])
#Count Atheletes by years
atheletes_train=athetes_over_Year['Year'].value_counts().sort_index()
#Visulize
atheletes_train.plot(kind='line',marker='*',markersize=10,title='Athelete Participation over the years',markerfacecolor= 'pink',color='#195657')

#drop duplicates
unique_atheletes=df.drop_duplicates(subset=['Name','region','Year'])
#Filter by gender
male=unique_atheletes[unique_atheletes['Sex']=='M']['Year'].value_counts().sort_index()
female=unique_atheletes[unique_atheletes['Sex']=='F']['Year'].value_counts().sort_index()
#plotting both on same graph
import matplotlib.pyplot as plt
plt.plot(male.index,male.values,label='Male',color='black')
plt.plot(female.index,female.values,label='Female',color='#FF0090')
plt.title('Male V/S Female')
plt.xlabel('Year')
plt.xlabel('Number of Atheletes')
plt.legend()
plt.show()

"""#Overall Analysis"""

df['Year'].unique().shape[0]-1

df['City'].unique().shape[0]

df['Event'].unique().shape[0]

df['Name'].unique().shape[0]

df['region'].unique().shape[0]

#line plot on events over the years
event_trend=df.drop_duplicates(['Year','Event'])
event_years=event_trend['Year'].value_counts().sort_index()

plt.figure(figsize=(5,4))
plt.plot(event_years.index,event_years.values,marker='o',color='teal',markerfacecolor='coral')
plt.title('Events over the years')
plt.xlabel('Year')
plt.ylabel('Number of Events')
plt.grid(True)
plt.show()

athelets_year=df.drop_duplicates(['Year','Name'])
repeat_players=athelets_year['Name'].value_counts().head(10).reset_index()
repeat_players

#No. of counries participation over the years
country_over_years=df.drop_duplicates(['Year','region'])['Year'].value_counts().sort_values()
plt.figure(figsize=(5,4))
plt.scatter(country_over_years.index,country_over_years.values,facecolor='#f45f74',marker='o',edgecolors='black')
plt.title('no. of countries participation over the years')
plt.xlabel('Year')
plt.ylabel('Number of countries')
plt.grid(True)
plt.show()

#No. of events over the years
events_over_years=df.drop_duplicates(['Year','Event'])['Year'].value_counts().sort_values()
plt.figure(figsize=(5,4))
plt.scatter(events_over_years.index,events_over_years.values,facecolor='#98c127',marker='o',edgecolors='black')
plt.title('no. of event participation over the years')
plt.xlabel('Year')
plt.ylabel('Number of Events')
plt.grid(True)
plt.show()

x=df.drop_duplicates(['Year','Sport','Event'])

plt.figure(figsize=(20,20))
sns.heatmap(x.pivot_table(index='Sport',columns='Year',values='Event',aggfunc='count').fillna(0).astype('int'),annot=True)

temp=df.dropna(subset=['Medal'])
medal_count=temp.groupby(['Sport','Name']).size().sort_values(ascending=False).reset_index(name='Medal_count')
medal_count

"""Country Wise analysis

"""

temp_df=df.dropna(subset=['Medal'])
temp_df.drop_duplicates(subset=['Team','NOC','Games','Year','City','Sport','Event','Medal'],inplace=True)

new_df=temp_df[temp_df['region']=='India']
final_df=new_df.groupby('Year').count()['Medal']

plt.figure(figsize=(5,4))
plt.plot(final_df.index,final_df.values,color='#BBA6DD')
plt.title('India Medal Tally over the years')
plt.xlabel('Years')
plt.ylabel('No. of Medals')
plt.show()

new_df=temp_df[temp_df['region']=='India']
sns.heatmap(new_df.pivot_table(index='Sport',columns='Year',values='Medal',aggfunc='count').fillna(0),cmap='YlGnBu')

x1=athelete_df['Age'].dropna()
x2=athelete_df[athelete_df['Medal']=='Gold']['Age'].dropna()
x3=athelete_df[athelete_df['Medal']=='Silver']['Age'].dropna()
x4=athelete_df[athelete_df['Medal']=='Bronze']['Age'].dropna()

athelete_df=df.drop_duplicates(subset=['Name','region'])
fig=ff.create_distplot([x1,x2,x3,x4],['Overall Age','Gold Medalist','Silver Medalist','Bronze Medalist'],show_hist=False,show_rug=False)
fig.show()

#Women V/S Men sports participation
men=athelete_df[athelete_df['Sex']=='M'].groupby('Year').count()['Name'].reset_index()
women=athelete_df[athelete_df['Sex']=='F'].groupby('Year').count()['Name'].reset_index()

final=men.merge(women,on='Year',how='left')
final.rename(columns={'Name_x':'Men','Name_y':'Women'},inplace=True)

fig=px.line(final,x='Year',y=['Men','Women'])
fig.show()



